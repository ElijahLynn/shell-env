#!/bin/sh
#
# Track the start and end times of a command, ensuring against
# concurrent invocations.  Useful as a helper for asynchronous
# process invocations.

TTRACK_DIR="$HOME/.ttrack"

me=`basename $0`

. $ZDOTDIR/lib/libproc.sh

usage () {
  cat <<EOF >&2
Usage: $me COMMAND [ARGS]
EOF
  exit 1
}

if [ "$1" == -h ] || [ "$1" == --help ] || [ $# -eq 0 ]; then
  usage
fi

cmd="$1"
shift

basecmd=`basename "$cmd"`
cmddir="$TTRACK_DIR/$basecmd"
mkdir -p "$cmddir"
lock="$cmddir/lock"

clean_up () {
  date +"%s" > "$cmddir/end"
  [ -d "$lock" ] && rmdir "$lock"
}  

obtain_lock "$lock" "$cmd" || exit 1
# Signal must be trapped *after* obtaining lock, otherwise
# failure to obtain the lock would remove an active lock.
trap clean_up EXIT

echo "$*" > "$cmddir/args"
date +"%s" > "$cmddir/start"
[ -e "$cmddir/exit_code" ] && rm -f "$cmddir/exit_code"
"$cmd" "$@"
echo $? > "$cmddir/exit_code"
