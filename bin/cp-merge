#!/bin/sh
# 
# Copies the entire contents of one directory to another, even if some
# subdirectories are common to both source and destination directories.
#
# This is preferred to rsync when you don't want to overwrite destination
# files (accomplished via tar -k), and to unison when the destination
# tree is substantially larger/different to the source tree.
#
# Adam Spiers <me@adamspiers.org>
#

if [ "$1" == -f ]; then
  # _F_orce overwriting of existing files in dest
  tar_keep=
  pax_keep=
  shift
elif [ "$1" == -u ]; then
  # _F_orce overwriting of existing files in dest
  tar_keep=--keep-newer-files
  pax_keep=-u
  shift
else
  # Default to keeping existing files
  tar_keep=--keep-old-files
  pax_keep=-k
fi

if [ "$1" = '--dry-run' ] || [ "$1" = '-n' ]; then
  dry_run=y
  shift
fi

if [ $# != 2 ]; then
  cat <<'EOF' >&2
Usage: $me [--dry-run|n] [-f|-u] <src dir> <dest dir>
Options:
   -f  Force overwrites of existing files in dest tree
       (does not overwrite by default)
   -u  Update existing files in dest tree only if source is newer

N.B. Consider rsync/unison as possible alternatives.
EOF
  exit 1
fi

src="$1"
dest="$2"
if ! [ -d "$src"  ]; then
  echo "No such directory '$src'" >&2
  exit 1
fi
if ! [ -d "$dest"  ]; then
  echo "No such directory '$dest'" >&2
  exit 1
fi

oldpwd=`pwd`

cd "$dest"
absdest=`pwd`

cd "$oldpwd"
cd "$src"

if [ -n "$dry_run" ]; then
  cat <<EOF >&2
# This is how you do it:
cd $src
# Then one of:
cp -r --reply=no . "$absdest"
cp -r -f . "$absdest"
cp -r -u . "$absdest"
pax -r -w -l $pax_keep . "$absdest"
# etc.

# N.B. Consider rsync/unison as possible alternatives.
EOF

  exit 1
fi

set -e
me=`basename $0`

# -l means use hard links - speeds things up dramatically
echo "cd `pwd`"
echo pax -r -w -l $pax_keep . "$absdest"
pax -r -w -l $pax_keep . "$absdest"

#tar -cf "$temptar" . | tar -C "$absdest" -x $tar_keep -f -
