#!/bin/sh

me=`basename $0`

usage () {
    cat <<EOF >&2
Usage: $me ARCHIVE
EOF
    exit 1
}

if [ "$1" == -h ] || [ "$1" == --help ] || [ -z "$1" ]; then
    usage
fi

archive="$1"

ideal_dest=
case "$archive" in
    *.tar|*.tgz|*.zip|*.xpi|*.jar)
        ideal_dest="${archive%.*}"
        ;;
    *.tar.gz|*.tar.bz2)
        ideal_dest="${archive%.*}"
        ideal_dest="${archive%.*}"
        ;;
esac

if ! tmpdir=`mktemp -d $ideal_dest.tmp.XXXXXXXX`; then
    echo "mktemp failed: $!"
    exit 1
fi

case "$archive" in
    *.tar)
        tar -C "$tmpdir" -xvf "$archive"
        ;;
    *.tar.gz|*.tgz)
        tar -C "$tmpdir" -zxvf "$archive"
        ;;
    *.tar.bz2)
        tar -C "$tmpdir" -jxvf "$archive"
        ;;
    *.zip|*.xpi|*.jar)
        unzip -d "$tmpdir" "$archive"
        ;;
    *)
        echo "ERROR: $archive is not a supported archive format" >&2
        exit 1
        ;;
esac

dirents=`ls -A "$tmpdir" | wc -l`

if [ "$dirents" -gt 1 ]; then
    # Naughty creator of archive!  Would cause a mess if unpacked to cwd.
    if ! [ -e "$ideal_dest" ]; then
        # safe to use ideal choice of destination directory
        dest="$ideal_dest"
    else
        echo "Ideal destination $ideal_dest already exists." >&2
        dest="$archive.unpacked"
        if [ -e "$dest" ]; then
            echo "$dest also already exists." >&2
            # Couldn't find a better place to move unpacked directory to, so
            # leave it where it already is.
            dest="$tmpdir"
        fi
    fi

    if [ "$tmpdir" != "$dest" ]; then
        if ! mv "$tmpdir" "$dest"; then
            echo "ERROR: mv $tmpdir $dest failed" >&2
            exit 1
        fi
    fi

    echo "$archive had more than one top-level entry; look inside $dest"
    exit 0
else
    top_dirent="`ls -A $tmpdir`"
    if mv "$tmpdir/$top_dirent" .; then
        rmdir "$tmpdir"
        echo "$archive clean -> unpacked to $top_dirent"
        exit 0
    else
        echo "ERROR: mv $tmpdir/$top_dirent . failed" >&2
        exit 1
    fi
fi

