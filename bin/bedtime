#!/bin/sh

SOFT_CHECK_EVERY=300 # seconds
HARD_CHECK_EVERY=30  # seconds
#DEBUG=y

me=`basename $0`

usage () {
    if [ -n "$1" ]; then
        echo "$*" >&2
        echo
    fi

    cat <<EOF >&2
Usage: $me [-n] HARD_THRESHOLD END_TIME
e.g. $me 12:30am 5am
     $me '11pm yesterday' 5am

Shuts down if the user is active after HARD_THRESHOLD.
Warns if the user is active before HARD_THRESHOLD.

-n means dry run - no shutdown performed.
EOF
}

hard_action_zone () {
    out=$( active-since "$hard" ) || return

    if [ -z "$dryrun" ]; then
        sudo shutdown -h +1 "Get to bed, asswipe!
$out"
    else
        msg="Get to bed, asswipe!
$me running in dry run mode so won't initiate system shutdown.
$out"
        wall "$msg"
        logger "$msg"
    fi
}

soft_warning_zone () {
    if out=$( active-since "$soft" ); then
        if [ -n "$dryrun" ]; then
            action="would shutdown system if not in dry run mode"
        else
            action="will shutdown system"
        fi
        msg="WARNING: activity after $hard $action!"
        echo "$msg" | wall
        #echo "$msg" | write "`id -un`" "`uidle --tty`"
        logger "$msg"
    fi
}

# Allow this to be run from crontab every minute, to prevent
# sneaky "pkill bedtime" behaviour, since I know my willpower
# is weak...

# Only recent SUSE distributions have pgrep -c :-(
pids="$( pgrep -u `id -un` -f $0 )"
num_pids=$( echo "$pids" | wc -l )
if [ $num_pids -ge 2 ]; then
    echo "$me already running; exiting."
    exit 0
fi

if [ "$1" == '-h' ] || [ "$1" == '--help' ]; then
    usage
    exit 0
fi

if [ "$1" == '-n' ]; then
    dryrun=true
    shift
fi

if [ $# -ne 2 ]; then
    usage
    exit 1
fi

hard="$1"
end="$2"

if ! end_epoch="`date +%s -d $end`" ||
   ! hard_epoch="`date +%s -d $hard`"; then
    echo
    usage
    exit 1
fi

while true; do
    now_epoch="`date +%s`"
    if [ -n "$DEBUG" ]; then
        cat <<EOF
now:  $now_epoch
hard: $hard_epoch
end:  $end_epoch
EOF
    fi

    if [ "$now_epoch" -ge "$end_epoch" ]; then
        echo "Could reasonably be awake now; stopping checks."
        exit 0
    fi

    if [ "$now_epoch" -ge "$hard_epoch" ]; then
        hard_action_zone
        sleep $HARD_CHECK_EVERY
    else
        soft_warning_zone
        sleep $SOFT_CHECK_EVERY
    fi
done
