#autoload

# can't be bothered to support this on old zshs

if [[ "$ZSH_VERSION_TYPE" == 'old' ]]; then
  echo "\nThis zsh doesn't support typeset -T; disabling cx."
  cx () { }
  return 1
fi

cx () {
  local short_host title_host short_from_opts suffix isuffix ssuffix

  # Ensure the typeset -gT doesn't result in titles=( '' )
  [[ -z "$TITLES"  ]] && unset TITLES

  # Now safe to bind TITLES to titles.
  (( $+titles )) || typeset -gT TITLES titles

  : ${TITLE_SHLVL:=$SHLVL}
  export TITLE_SHLVL

  if [[ "$SHLVL" != "$TITLE_SHLVL" ]]; then
    # We've changed shell; assume that the most recently pushed entry
    # is the starting point for the new shell.
    TITLE_SHLVL=$SHLVL
    [[  ${(t)titles} == 'array' ]] && [[ -n  "$TITLES" ]] &&  titles=(  "$TITLES" )
  fi

  short_host=${HOST%%.*}

  # Allow overriding auto suffix via -l.
  # Not sure how it should handle -l and -l ""
  if [[ "$1" == '-l' ]]; then
    shift
    suffix=
  else
    if [[ "$USERNAME" == 'root' ]]; then
      suffix="${short_host}#"
    else
      suffix="$USERNAME@${short_host}"
    fi

    tsuffix=" : $suffix"
    isuffix="$suffix"
    ssuffix="$suffix"
  fi

  # We use the fact that the environment variable TITLE_SHLVL can
  # cross process boundaries, even though the array.
  export TITLES

  if (( $# == 0 )); then
    # restore current setting
    if (( $#titles == 0 )); then
      full_title="$suffix"
      full_ititle="$isuffix"
      full_stitle="$ssuffix"
    else
      full_title="$titles[1] : $suffix"
      full_ititle="$titles[1] : $isuffix"
      full_stitle="$titles[1]|$isuffix"
    fi
  else
    # push new setting
    if (( $#titles )); then
      titles=( "$*" "$titles[@]" )
    else
      titles=( "$*" )
    fi

    if [[ -z "$*" ]]; then
      # allow pushing of ""
      full_title="$suffix"
      full_ititle="$isuffix"
      full_stitle="$ssuffix"
    else
      full_title="$* : $suffix"
      full_ititle="$* : $isuffix"
      full_stitle="$*|$ssuffix"
    fi
  fi

  functions cx_hook >/dev/null && cx_hook    

  set_title window "$full_title"
  set_title icon "$full_ititle"
  [[ -n "$IN_SCREEN" ]] && 
    set_title screen "$full_stitle"
  return 0
}

cx "$@"
